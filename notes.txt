Magesh Kuppan

Schedule:
    Commence    : 9:30 AM
    Tea Break   : 11:00 AM (20 mins)
    Lunch Break : 1:00 PM (1 hour)
    Tea Break   : 3:30 PM (20 mins)
    Wind up     : 5:30 PM

Methodology:
    * No Powerpoint
    * 100% hands on driven

About You:
    Name
    Experience
    Primary Skillset
    Experience in Go (if any)


Why Go?
    Simplicity
        ONLY 25 keywords
            - No access modifiers
            - No classes (only structs)
            - No inheritence (only composition)
            - No reference types (everything is a value)
            - No exceptions (only errors)
            - No "try catch finally"
            - No pointer arithmetic
            - No implicit type conversion
            - No function overloading
    
    Lightweight
        Close to hardware
        No VM
        Efficient Concurrency Model

    Performance
        Close to hardware
        Equivalent to C++

    Concurrency
        - Concurrency features are built in the language
            go keyword, channel (data type), channel operator ( <- ), range keyword, "select case" construct
        - Standard Library
            "sync" package
            "sync/atomic" package


The Paradox of Choice (Barry Schwartz)
Stumbling on Happiness (Daniel Gilbert)

Software Requirements:
    1. Go Tools (https://go.dev/dl)
        Verification:
            go version

    2. Visual Studio Code (https://code.visualstudio.com/download)
    3. Go extensions for VS Code (https://marketplace.visualstudio.com/items?itemName=golang.Go)
    4. Any Git client

Standard Library Documentation:
    https://pkg.go.dev/std


To run a program
    go run <filename.go>

To create a build
    go build <filename.go>
    go build -o <binary_filename> <filename.go>

To list all the environment variables
    go env

To list specific environment variables
    go env <var_1> <var_2> .....

To change the environment variables
    go env -w <var_1=val_1> <var_2=val_2>

Environment variables for cross compilation
    GOARCH
    GOOS

To get the list of supported platforms
    go tool dist list

To cross compile
    GOOS=windows GOARCH=386 go build <filename.go>

Data Types
    bool
    string

    int
    int8
    int16
    int32
    int64

    uint
    uint8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 [ real(float32) + imaginary(float32) ]
    complex128[ real(float64) + imaginary(float64) ]

    byte (alias for uint8)
    rune (alias for int32) (unicode code point)

Variables
    Function Scope
        := can be used
        Cannot have unused variables
        

    Package Scope
        := cannot be used
        Can have unused variables

Constants
    CAN have unused constants at function scope & package scope

Constructs
    if else
    switch case
    for
    func

Functions
    - Variadic functions
    - Anonymous functions
    - Higher Order Functions (Functions as first class objects)
        * Assign functions as values to variables
        * Pass functions are arguments
        * Return functions as return results
    
Errors
    values
    implements "error" interface
    Not "thrown" but returned
    
    Creation:
        errors.New()
        fmt.Errorf()
        etc